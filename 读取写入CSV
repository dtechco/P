#================读取
    # 下面这种加了encoding的写法需要在python3环境下运行
    csv_reader = csv.reader(open('123.csv', encoding='utf-8'))
    for row in csv_reader:
        # 输出的每一行是一个list,list中的每一个元素转换成了string类型
        print(row)




读取一：读取到数组，每行是独立的list
#读取csv文件方式1
csvFile = open('123.csv','r')
reader = csv.reader(csvFile)
data = []
for item in reader:
#   print(item)
    data.append(item)
#print(data)
csvFile.close()

读取二：读取后每行打印，每行是独立的list
    with open("123.csv", 'r') as csvFile:
        # 读取csv文件,返回的是迭代类型
        reader2 = csv.reader(csvFile)
        for item2 in reader2:
            print(item2)
    csvFile.close()

写入
来源：https://www.jb51.net/article/164692.htm
========================================
#从列表写入csv文件
#设置newline,否则两行之间会空一行
csvFile2 = open('123.csv','w',newline='')
writer = csv.writer(csvFile2)
m = len(data)
for i in range(m):
    writer.writerow(data[i])
csvFile2.close()
  
================================  
#从字典写入csv文件
dic = {'张三':123,'李四':456,'王二娃':789}
csvFile3 = open('123.csv','w',newline='')
writer2 = csv.writer(csvFile3)
for key in dic:
    print(key)
    writer2.writerow([key,dic[key]])
  
csvFile3.close()

不管是数组还是字典，最终还是变成数组writeRow
===============================
#另一种方法:用csv包,一行一行写入
import csv
  
#python2可以用file替代open
with open('test.csv','w') as csvFile:
    writer = csv.writer(csvFile)
    #先写columns_name
    writer.writerow(["index","a_name","b_name"])
    #写入多行用writerows
    writer.writerows([[1,2,3],[0,1,2],[4,5,6]])
